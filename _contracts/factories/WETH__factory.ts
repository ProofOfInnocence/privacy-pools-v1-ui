/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ticker",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f9538038062000f958339810160408190526200003491620001bf565b8151829082906200004d9060039060208501906200006e565b508051620000639060049060208401906200006e565b505050505062000279565b8280546200007c9062000226565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b600082601f83011262000125578081fd5b81516001600160401b038082111562000142576200014262000263565b6040516020601f8401601f19168201810183811183821017156200016a576200016a62000263565b604052838252858401810187101562000181578485fd5b8492505b83831015620001a4578583018101518284018201529182019162000185565b83831115620001b557848185840101525b5095945050505050565b60008060408385031215620001d2578182fd5b82516001600160401b0380821115620001e9578384fd5b620001f78683870162000114565b935060208501519150808211156200020d578283fd5b506200021c8582860162000114565b9150509250929050565b6002810460018216806200023b57607f821691505b602082108114156200025d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610d0c80620002896000396000f3fe6080604052600436106100c25760003560e01c8063395093511161007f578063a457c2d711610059578063a457c2d7146101fa578063a9059cbb1461021a578063d0e30db01461023a578063dd62ed3e14610242576100c2565b806339509351146101a557806370a08231146101c557806395d89b41146101e5576100c2565b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461011f57806323b872dd146101415780632e1a7d4d14610161578063313ce56714610183575b600080fd5b3480156100d357600080fd5b506100dc610262565b6040516100e9919061094c565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046108fd565b6102f4565b6040516100e99190610941565b34801561012b57600080fd5b50610134610316565b6040516100e99190610c60565b34801561014d57600080fd5b5061011261015c3660046108c2565b61031c565b34801561016d57600080fd5b5061018161017c366004610926565b61034a565b005b34801561018f57600080fd5b506101986103dd565b6040516100e99190610c69565b3480156101b157600080fd5b506101126101c03660046108fd565b6103e2565b3480156101d157600080fd5b506101346101e036600461086f565b61040e565b3480156101f157600080fd5b506100dc61042d565b34801561020657600080fd5b506101126102153660046108fd565b61043c565b34801561022657600080fd5b506101126102353660046108fd565b610484565b61018161049c565b34801561024e57600080fd5b5061013461025d366004610890565b6104a8565b60606003805461027190610c9b565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610c9b565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b5050505050905090565b6000806102ff6104d3565b905061030c8185856104d7565b5060019392505050565b60025490565b6000806103276104d3565b905061033485828561058b565b61033f8585856105d5565b506001949350505050565b61035433826106d6565b6000336001600160a01b03168260405161036d9061093e565b60006040518083038185875af1925050503d80600081146103aa576040519150601f19603f3d011682016040523d82523d6000602084013e6103af565b606091505b50509050806103d95760405162461bcd60e51b81526004016103d090610bad565b60405180910390fd5b5050565b601290565b6000806103ed6104d3565b905061030c8185856103ff85896104a8565b6104099190610c77565b6104d7565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461027190610c9b565b6000806104476104d3565b9050600061045582866104a8565b9050838110156104775760405162461bcd60e51b81526004016103d090610be4565b61033f82868684036104d7565b60008061048f6104d3565b905061030c8185856105d5565b6104a633346107ae565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104fd5760405162461bcd60e51b81526004016103d090610b69565b6001600160a01b0382166105235760405162461bcd60e51b81526004016103d090610a24565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061057e908590610c60565b60405180910390a3505050565b600061059784846104a8565b905060001981146105cf57818110156105c25760405162461bcd60e51b81526004016103d090610a66565b6105cf84848484036104d7565b50505050565b6001600160a01b0383166105fb5760405162461bcd60e51b81526004016103d090610b24565b6001600160a01b0382166106215760405162461bcd60e51b81526004016103d09061099f565b61062c8383836107a9565b6001600160a01b038316600090815260208190526040902054818110156106655760405162461bcd60e51b81526004016103d090610a9d565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106c3908690610c60565b60405180910390a36105cf8484846107a9565b6001600160a01b0382166106fc5760405162461bcd60e51b81526004016103d090610ae3565b610708826000836107a9565b6001600160a01b038216600090815260208190526040902054818110156107415760405162461bcd60e51b81526004016103d0906109e2565b6001600160a01b0383166000818152602081905260408082208585039055600280548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610799908690610c60565b60405180910390a36107a9836000845b505050565b6001600160a01b0382166107d45760405162461bcd60e51b81526004016103d090610c29565b6107e0600083836107a9565b80600260008282546107f29190610c77565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610844908590610c60565b60405180910390a36103d9600083836107a9565b80356001600160a01b038116811461042857600080fd5b600060208284031215610880578081fd5b61088982610858565b9392505050565b600080604083850312156108a2578081fd5b6108ab83610858565b91506108b960208401610858565b90509250929050565b6000806000606084860312156108d6578081fd5b6108df84610858565b92506108ed60208501610858565b9150604084013590509250925092565b6000806040838503121561090f578182fd5b61091883610858565b946020939093013593505050565b600060208284031215610937578081fd5b5035919050565b90565b901515815260200190565b6000602080835283518082850152825b818110156109785785810183015185820160400152820161095c565b818111156109895783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f574554483a20455448207472616e73666572206661696c656400000000000000604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c9657634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610caf57607f821691505b60208210811415610cd057634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ad38f86efa8e360e1c72c71d6910d4d99894a457e267ff2b716e1a677661587564736f6c63430008000033";

export class WETH__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    ticker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(name, ticker, overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    name: string,
    ticker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, ticker, overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
