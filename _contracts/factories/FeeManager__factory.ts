/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { FeeManager, FeeManagerInterface } from "../FeeManager";

const _abi = [
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "bytes32",
        name: "",
        internalType: "bytes32",
      },
    ],
    name: "FOREIGN_TO_HOME_FEE",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "bytes32",
        name: "",
        internalType: "bytes32",
      },
    ],
    name: "HOME_TO_FOREIGN_FEE",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "uint256",
        name: "",
        internalType: "uint256",
      },
    ],
    name: "calculateFee",
    inputs: [
      {
        type: "bytes32",
        name: "_feeType",
        internalType: "bytes32",
      },
      {
        type: "address",
        name: "_token",
        internalType: "address",
      },
      {
        type: "uint256",
        name: "_value",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "uint256",
        name: "",
        internalType: "uint256",
      },
    ],
    name: "getFee",
    inputs: [
      {
        type: "bytes32",
        name: "_feeType",
        internalType: "bytes32",
      },
      {
        type: "address",
        name: "_token",
        internalType: "address",
      },
    ],
  },
];

export class FeeManager__factory {
  static readonly abi = _abi;
  static createInterface(): FeeManagerInterface {
    return new utils.Interface(_abi) as FeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeManager {
    return new Contract(address, _abi, signerOrProvider) as FeeManager;
  }
}
