/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20PrivacyPool,
  ERC20PrivacyPoolInterface,
} from "../ERC20PrivacyPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier2",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "inputNullifier1",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "inputNullifier2",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "outputCommitment1",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "outputCommitment2",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "NewTxRecord",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "membershipProofURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "inputNullifiers",
        type: "bytes32[2]",
      },
    ],
    name: "NewWithdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "__gap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32[2]",
            name: "inputNullifiers",
            type: "bytes32[2]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct PrivacyPool.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "membershipProofURI",
            type: "string",
          },
        ],
        internalType: "struct PrivacyPool.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier2",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32[2]",
            name: "inputNullifiers",
            type: "bytes32[2]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct PrivacyPool.Proof",
        name: "_args",
        type: "tuple",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600280546001600160401b03191690553480156200002257600080fd5b5060405162002df938038062002df9833981016040819052620000459162000823565b84848483828260008263ffffffff16116200007d5760405162461bcd60e51b81526004016200007490620008d4565b60405180910390fd5b60208263ffffffff1610620000a65760405162461bcd60e51b815260040162000074906200089d565b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff1610156200011e57620000f363ffffffff821662000195565b63ffffffff82166000908152602081905260409020558062000115816200094e565b915050620000cd565b506200013063ffffffff831662000195565b60008052600160208190527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb499190915560035550506001600160601b0319606094851b811660c0526005919091559490921b90931660e0525062000998945050505050565b600081620001c557507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6200081e565b8160011415620001f757507f1a332ca2cd2436bdc6796e6e4244ebf6f7e359868b7252e55342f766e40880826200081e565b81600214156200022957507f2fb19ac27499bdf9d7d3b387eff42b6d12bffbc6206e81d0ef0b0d6b24520ebd6200081e565b81600314156200025b57507f18d0d6e282d4eacbf18efc619a986db763b75095ed122fac7d4a49418daa42e16200081e565b81600414156200028d57507f054dec40f76a0f5aaeff1a85a4a3721b92b4ad244362d30b0ef8ed7033de11d36200081e565b8160051415620002bf57507f1d24c91f8d40f1c2591edec19d392905cf5eb01eada48d71836177ef11aea5b26200081e565b8160061415620002f157507f0fb63621cfc047eba2159faecfa55b120d7c81c0722633ef94e20e27675e378f6200081e565b81600714156200032357507f277b08f214fe8c5504a79614cdec5abd7b6adc9133fe926398684c82fd798b446200081e565b81600814156200035557507f2633613437c1fd97f7c798e2ea30d52cfddee56d74f856a541320ae86ddaf2de6200081e565b81600914156200038657507e768963fa4b993fbfece3619bfaa3ca4afd7e3864f11b09a0849dbf4ad258076200081e565b81600a1415620003b857507f0e63ff9df484c1a21478bd27111763ef203177ec0a7ef3a3cd43ec909f587bb06200081e565b81600b1415620003ea57507f0e6a4bfb0dd0ac8bf5517eaac48a95ba783dabe9f64494f9c892d3e8431eaab36200081e565b81600c14156200041c57507f0164a46b3ffff8baca00de7a130a63d105f1578076838502b99488505d5b3d356200081e565b81600d14156200044e57507f145a6f1521c02b250cc76eb35cd67c9b0b22473577de3778e4c51903836c89576200081e565b81600e14156200048057507f29849fc5b55303a660bad33d986fd156d48516ec58a0f0a561a03b704a8022546200081e565b81600f1415620004b257507f26639dd486b374e98ac6da34e8651b3fca58c51f1c2f857dd82045f27fc8dbe66200081e565b8160101415620004e457507f2aa39214b887ee877e60afdb191390344c68177c30a0b8646649774174de5e336200081e565b81601114156200051657507f09b397d253e41a521d042ffe01f8c33ae37d4c7da21af68693aafb63d599d7086200081e565b81601214156200054857507f02fbfd397ad901cea38553239aefec016fcb6a19899038503f04814cbb79a5116200081e565b81601314156200057a57507f266640a877ec97a91f6c95637f843eeac8718f53f311bac9cba7d958df646f9d6200081e565b8160141415620005ac57507f29f9a0a07a22ab214d00aaa0190f54509e853f3119009baecb0035347606b0a96200081e565b8160151415620005de57507f0a1fda67bffa0ab3a755f23fdcf922720820b6a96616a5ca34643cd0b935e3d66200081e565b81601614156200061057507f19507199eb76b5ec5abe538a01471d03efb6c6984739c77ec61ada2ba2afb3896200081e565b81601714156200064257507f26bd93d26b751484942282e27acfb6d193537327a831df6927e19cdfc73c3e646200081e565b81601814156200067457507f2eb88a9c6b00a4bc6ea253268090fe1d255f6fe02d2eb745517723aae44d73866200081e565b8160191415620006a657507f13e50d0bda78be97792df40273cbb16f0dc65c0697d81a82d07d0f6eee80a1646200081e565b81601a1415620006d857507f2ea95776929000133246ff8d9fdcba179d0b262b9e910558309bac1c1ec03d7a6200081e565b81601b14156200070a57507f1a640d6ef66e356c795396c0957b06a99891afe0c493f4d0bdfc0450764bae606200081e565b81601c14156200073c57507f2b17979f2c2048dd9e4ee5f482cced21435ea8cc54c32f80562e39a5016b04966200081e565b81601d14156200076e57507f29ba6a30de50542e261abfc7ee0c68911002d3acd4dd4c02ad59aa96805b20bb6200081e565b81601e1415620007a057507f103fcf1c8a98ebe50285f6e669077a579308311fd44bb6895d5da7ba7fd3564e6200081e565b81601f1415620007d257507f166bdd01780976e655f5278260c638dcf10fe7c136f37c9152cbcaabef901f4d6200081e565b81602014156200080457507f2712c601a9b8b2abd396a619327095d3f1ea86a6c07d6df416a3973a1a4b3ce56200081e565b60405162461bcd60e51b8152600401620000749062000917565b919050565b600080600080600060a086880312156200083b578081fd5b855162000848816200097f565b602087015190955063ffffffff8116811462000862578182fd5b604087015190945062000875816200097f565b606087015190935062000888816200097f565b80925050608086015190509295509295909350565b6020808252601e908201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604082015260600190565b60208082526023908201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60408201526265726f60e81b606082015260800190565b60208082526013908201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604082015260600190565b600063ffffffff808316818114156200097557634e487b7160e01b83526011600452602483fd5b6001019392505050565b6001600160a01b03811681146200099557600080fd5b50565b60805160601c60a05160e01c60c05160601c60e05160601c6123ea62000a0f60003960008181610e9701528181610f3a015281816115ba01526116cd0152600081816105db015261074d0152600081816105b7015281816113c001526114350152600081816105160152610e6101526123ea6000f3fe60806040526004361061014b5760003560e01c8063bc063e1a116100b6578063e82955881161006f578063e82955881461033f578063ec7329591461035f578063ed33639f14610374578063f178e47c14610389578063fc0c546a146103a9578063fc7e9c6f146103be5761014b565b8063bc063e1a14610276578063c2b40ae4146102b5578063cb3dce9d146102d5578063cd87a3b4146102ea578063cfcac5c1146102ff578063e5285dcc1461031f5761014b565b80636d9833e3116101085780636d9833e31461022c5780637236912f1461024c57806378abb49b146102615780637fe24ffe1461027657806390eeb02b1461028b578063ba70f757146102a05761014b565b806317cc915c146101505780632570b7b41461018657806338bf282e146101b3578063414a37ba146101d35780634ecf518b146101e8578063522d0d701461020a575b600080fd5b34801561015c57600080fd5b5061017061016b36600461195b565b6103d3565b60405161017d9190611bfc565b60405180910390f35b34801561019257600080fd5b506101a66101a13660046119ac565b6103e8565b60405161017d9190611c07565b3480156101bf57600080fd5b506101a66101ce36600461198b565b610499565b3480156101df57600080fd5b506101a66105a3565b3480156101f457600080fd5b506101fd6105b5565b60405161017d9190612084565b34801561021657600080fd5b5061021f6105d9565b60405161017d9190611cab565b34801561023857600080fd5b5061017061024736600461195b565b6105fd565b61025f61025a3660046119f1565b61067b565b005b34801561026d57600080fd5b506101a6610692565b34801561028257600080fd5b506101a6610698565b34801561029757600080fd5b506101fd6106a0565b3480156102ac57600080fd5b506101a66106ac565b3480156102c157600080fd5b506101a66102d036600461195b565b6106c7565b3480156102e157600080fd5b506101a66106d9565b3480156102f657600080fd5b506101fd6106df565b34801561030b57600080fd5b5061017061031a3660046119be565b6106e4565b34801561032b57600080fd5b5061017061033a36600461195b565b6107e1565b34801561034b57600080fd5b506101a661035a36600461195b565b6107f6565b34801561036b57600080fd5b506101a6610e3b565b34801561038057600080fd5b5061021f610e5f565b34801561039557600080fd5b506101a66103a436600461195b565b610e83565b3480156103b557600080fd5b5061021f610e95565b3480156103ca57600080fd5b506101fd610eb9565b60066020526000908152604090205460ff1681565b6000600160f81b82106104165760405162461bcd60e51b815260040161040d90611e6d565b60405180910390fd5b610423600160f81b612338565b831380156104345750600160f81b83125b6104505760405162461bcd60e51b815260040161040d90611cee565b600061045c8385612227565b9050600081121561048d5761047081612338565b61048890600080516020612395833981519152612266565b61048f565b805b9150505b92915050565b600060008051602061239583398151915283106104c85760405162461bcd60e51b815260040161040d90611d7e565b60008051602061239583398151915282106104f55760405162461bcd60e51b815260040161040d90611e2c565b6104fd61177f565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e566090610553908490600401611bee565b60206040518083038186803b15801561056b57600080fd5b505afa15801561057f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f9190611973565b60008051602061239583398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008161060c57506000610676565b60025463ffffffff16805b63ffffffff811660009081526001602052604090205484141561063f57600192505050610676565b63ffffffff811661064e575060645b80610658816122a2565b9150508163ffffffff168163ffffffff161415610617576000925050505b919050565b61068481610ecd565b61068e8282610fc7565b5050565b60055481565b600160f81b81565b60025463ffffffff1681565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b60045481565b606481565b80516040805160e08101825260208085015182526080808601518284015260a080870151848601528487018051516060808701919091529051840151928501929092529086018051519184019190915251015160c0820152905163598da1d160e01b81526000927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169263598da1d19261078a929190600401611c63565b60206040518083038186803b1580156107a257600080fd5b505afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da919061193b565b9050610676565b60009081526006602052604090205460ff1690565b60008161082457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c610676565b816001141561085457507f1a332ca2cd2436bdc6796e6e4244ebf6f7e359868b7252e55342f766e4088082610676565b816002141561088457507f2fb19ac27499bdf9d7d3b387eff42b6d12bffbc6206e81d0ef0b0d6b24520ebd610676565b81600314156108b457507f18d0d6e282d4eacbf18efc619a986db763b75095ed122fac7d4a49418daa42e1610676565b81600414156108e457507f054dec40f76a0f5aaeff1a85a4a3721b92b4ad244362d30b0ef8ed7033de11d3610676565b816005141561091457507f1d24c91f8d40f1c2591edec19d392905cf5eb01eada48d71836177ef11aea5b2610676565b816006141561094457507f0fb63621cfc047eba2159faecfa55b120d7c81c0722633ef94e20e27675e378f610676565b816007141561097457507f277b08f214fe8c5504a79614cdec5abd7b6adc9133fe926398684c82fd798b44610676565b81600814156109a457507f2633613437c1fd97f7c798e2ea30d52cfddee56d74f856a541320ae86ddaf2de610676565b81600914156109d357507e768963fa4b993fbfece3619bfaa3ca4afd7e3864f11b09a0849dbf4ad25807610676565b81600a1415610a0357507f0e63ff9df484c1a21478bd27111763ef203177ec0a7ef3a3cd43ec909f587bb0610676565b81600b1415610a3357507f0e6a4bfb0dd0ac8bf5517eaac48a95ba783dabe9f64494f9c892d3e8431eaab3610676565b81600c1415610a6357507f0164a46b3ffff8baca00de7a130a63d105f1578076838502b99488505d5b3d35610676565b81600d1415610a9357507f145a6f1521c02b250cc76eb35cd67c9b0b22473577de3778e4c51903836c8957610676565b81600e1415610ac357507f29849fc5b55303a660bad33d986fd156d48516ec58a0f0a561a03b704a802254610676565b81600f1415610af357507f26639dd486b374e98ac6da34e8651b3fca58c51f1c2f857dd82045f27fc8dbe6610676565b8160101415610b2357507f2aa39214b887ee877e60afdb191390344c68177c30a0b8646649774174de5e33610676565b8160111415610b5357507f09b397d253e41a521d042ffe01f8c33ae37d4c7da21af68693aafb63d599d708610676565b8160121415610b8357507f02fbfd397ad901cea38553239aefec016fcb6a19899038503f04814cbb79a511610676565b8160131415610bb357507f266640a877ec97a91f6c95637f843eeac8718f53f311bac9cba7d958df646f9d610676565b8160141415610be357507f29f9a0a07a22ab214d00aaa0190f54509e853f3119009baecb0035347606b0a9610676565b8160151415610c1357507f0a1fda67bffa0ab3a755f23fdcf922720820b6a96616a5ca34643cd0b935e3d6610676565b8160161415610c4357507f19507199eb76b5ec5abe538a01471d03efb6c6984739c77ec61ada2ba2afb389610676565b8160171415610c7357507f26bd93d26b751484942282e27acfb6d193537327a831df6927e19cdfc73c3e64610676565b8160181415610ca357507f2eb88a9c6b00a4bc6ea253268090fe1d255f6fe02d2eb745517723aae44d7386610676565b8160191415610cd357507f13e50d0bda78be97792df40273cbb16f0dc65c0697d81a82d07d0f6eee80a164610676565b81601a1415610d0357507f2ea95776929000133246ff8d9fdcba179d0b262b9e910558309bac1c1ec03d7a610676565b81601b1415610d3357507f1a640d6ef66e356c795396c0957b06a99891afe0c493f4d0bdfc0450764bae60610676565b81601c1415610d6357507f2b17979f2c2048dd9e4ee5f482cced21435ea8cc54c32f80562e39a5016b0496610676565b81601d1415610d9357507f29ba6a30de50542e261abfc7ee0c68911002d3acd4dd4c02ad59aa96805b20bb610676565b81601e1415610dc357507f103fcf1c8a98ebe50285f6e669077a579308311fd44bb6895d5da7ba7fd3564e610676565b81601f1415610df357507f166bdd01780976e655f5278260c638dcf10fe7c136f37c9152cbcaabef901f4d610676565b8160201415610e2357507f2712c601a9b8b2abd396a619327095d3f1ea86a6c07d6df416a3973a1a4b3ce5610676565b60405162461bcd60e51b815260040161040d90611ef9565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600254640100000000900463ffffffff1681565b3415610eeb5760405162461bcd60e51b815260040161040d90611dea565b600081602001511315610fc45760055481602001511115610f1e5760405162461bcd60e51b815260040161040d90611fad565b60208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91610f72913391309190600401611b72565b602060405180830381600087803b158015610f8c57600080fd5b505af1158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e919061193b565b50565b610fcf611379565b610fdc82602001516105fd565b610ff85760405162461bcd60e51b815260040161040d90611d1a565b60005b6002811015611064576110358360400151826002811061102b57634e487b7160e01b600052603260045260246000fd5b60200201516107e1565b156110525760405162461bcd60e51b815260040161040d90611ec9565b8061105c816122c2565b915050610ffb565b50600080516020612395833981519152816040516020016110859190611ff7565b6040516020818303038152906040528051906020012060001c6110a89190612301565b60a0830151146110ca5760405162461bcd60e51b815260040161040d90611d47565b6110dc816020015182606001516103e8565b8260800151146110fe5760405162461bcd60e51b815260040161040d90611cbf565b611107826106e4565b6111235760405162461bcd60e51b815260040161040d90611e92565b60005b6002811015611196576001600660008560400151846002811061115957634e487b7160e01b600052603260045260246000fd5b6020020151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061118e906122c2565b915050611126565b50606082015180516020909101516111ae91906113a3565b506111b98282611584565b606082015151600280547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd92916111fd91640100000000900463ffffffff1661227d565b836080015160405161121193929190611c3e565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160025461126490600190640100000000900463ffffffff1661227d565b8360a0015160405161127893929190611c3e565b60405180910390a16040828101515190517f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce916112b491611c07565b60405180910390a16040828101516020015190517f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce916112f391611c07565b60405180910390a160408201518051602091820151606085015180519301516080860151600280547f71b14b28e3620b88b0e81f25941af9627f483c13b1fc9542e923320cbb792bc59693929161135791640100000000900463ffffffff1661227d565b60405161136996959493929190611c10565b60405180910390a161068e611778565b6002600354141561139c5760405162461bcd60e51b815260040161040d90611f76565b6002600355565b6002805460009164010000000090910463ffffffff16906113e5907f000000000000000000000000000000000000000000000000000000000000000090612150565b63ffffffff168163ffffffff1614156114105760405162461bcd60e51b815260040161040d90611f26565b600061141d6002836120e7565b9050600061142b8686610499565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156114f457611472600286612315565b63ffffffff166114ad5783925061148e8163ffffffff166107f6565b63ffffffff8216600090815260208190526040902085905591506114c9565b63ffffffff811660009081526020819052604090205492508391505b6114d38383610499565b93506114e06002866120e7565b9450806114ec816122dd565b915050611433565b5060025460009060649061150f9063ffffffff1660016120bf565b6115199190612315565b6002805463ffffffff191663ffffffff83169081178255600090815260016020526040902086905590915061154f9087906120bf565b6002805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6000816020015112156116c15780516001600160a01b03166115b85760405162461bcd60e51b815260040161040d90611db3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb826000015183602001516115fa90612338565b6040518363ffffffff1660e01b8152600401611617929190611b96565b602060405180830381600087803b15801561163157600080fd5b505af1158015611645573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611669919061193b565b507f8eac2f306b5f13dbca10eb6a506a09c150eb16a3b3cc69df1050e7b59a91f1678160000151826020015161169e90612338565b8360c0015185604001516040516116b89493929190611baf565b60405180910390a15b60608101511561068e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb826040015183606001516040518363ffffffff1660e01b8152600401611721929190611b96565b602060405180830381600087803b15801561173b57600080fd5b505af115801561174f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611773919061193b565b505050565b6001600355565b60405180604001604052806002906020820280368337509192915050565b80356001600160a01b038116811461067657600080fd5b600082601f8301126117c4578081fd5b6040516040810181811067ffffffffffffffff821117156117e7576117e761237e565b80604052508083856040860111156117fd578384fd5b835b600281101561181e5781358352602092830192909101906001016117ff565b509195945050505050565b600082601f830112611839578081fd5b813567ffffffffffffffff8111156118535761185361237e565b611866601f8201601f1916602001612095565b81815284602083860101111561187a578283fd5b816020850160208301379081016020019190915292915050565b600061010082840312156118a6578081fd5b60405160c0810167ffffffffffffffff82821081831117156118ca576118ca61237e565b8160405282935084359150808211156118e257600080fd5b506118ef85828601611829565b8252506020830135602082015261190984604085016117b4565b604082015261191b84608085016117b4565b606082015260c0830135608082015260e083013560a08201525092915050565b60006020828403121561194c578081fd5b8151801515811461048d578182fd5b60006020828403121561196c578081fd5b5035919050565b600060208284031215611984578081fd5b5051919050565b6000806040838503121561199d578081fd5b50508035926020909101359150565b6000806040838503121561199d578182fd5b6000602082840312156119cf578081fd5b813567ffffffffffffffff8111156119e5578182fd5b61048f84828501611894565b60008060408385031215611a03578182fd5b823567ffffffffffffffff80821115611a1a578384fd5b611a2686838701611894565b93506020850135915080821115611a3b578283fd5b9084019060e08287031215611a4e578283fd5b611a5860e0612095565b611a618361179d565b815260208301356020820152611a796040840161179d565b604082015260608301356060820152608083013582811115611a99578485fd5b611aa588828601611829565b60808301525060a083013582811115611abc578485fd5b611ac888828601611829565b60a08301525060c083013582811115611adf578485fd5b611aeb88828601611829565b60c0830152508093505050509250929050565b8060005b6002811015611b21578151845260209384019390910190600101611b02565b50505050565b60008151808452815b81811015611b4c57602081850181015186830182015201611b30565b81811115611b5d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038616825284602083015260a06040830152611bd660a0830185611b27565b9050611be56060830184611afe565b95945050505050565b604081016104938284611afe565b901515815260200190565b90815260200190565b958652602086019490945260408501929092526060840152608083015263ffffffff1660a082015260c00190565b600084825263ffffffff8416602083015260606040830152611be56060830184611b27565b6000610100808352611c7781840186611b27565b91505060208083018460005b6007811015611ca057815183529183019190830190600101611c83565b505050509392505050565b6001600160a01b0391909116815260200190565b602080825260159082015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b604082015260600190565b602080825260129082015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b604082015260600190565b602080825260139082015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b604082015260600190565b6020808252601c908201527f496e636f72726563742065787465726e616c2064617461206861736800000000604082015260600190565b6020808252818101527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604082015260600190565b6020808252601e908201527f43616e277420776974686472617720746f207a65726f20616464726573730000604082015260600190565b60208082526022908201527f455448206973206e6f7420616363657074656420666f7220455243323020706f6040820152611bdb60f21b606082015260800190565b60208082526021908201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6040820152601960fa1b606082015260800190565b6020808252600b908201526a496e76616c69642066656560a81b604082015260600190565b60208082526019908201527f496e76616c6964207472616e73616374696f6e2070726f6f6600000000000000604082015260600190565b602080825260169082015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b604082015260600190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b60208082526030908201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160408201526f1d995cc818d85b88189948185919195960821b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60006020825260018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160e060a0840152612048610100840182611b27565b905060a0840151601f19808584030160c08601526120668383611b27565b925060c08601519150808584030160e086015250611be58282611b27565b63ffffffff91909116815260200190565b60405181810167ffffffffffffffff811182821017156120b7576120b761237e565b604052919050565b600063ffffffff8083168185168083038211156120de576120de612352565b01949350505050565b600063ffffffff808416806120fe576120fe612368565b92169190910492915050565b80825b600180861161211c5750612147565b81870482111561212e5761212e612352565b8086161561213b57918102915b9490941c93800261210d565b94509492505050565b600063ffffffff61048f8182861683861660008261217057506001612220565b8161217d57506000612220565b8160018114612193576002811461219d576121ca565b6001915050612220565b60ff8411156121ae576121ae612352565b6001841b9150848211156121c4576121c4612352565b50612220565b5060208310610133831016604e8410600b84101617156121fd575081810a838111156121f8576121f8612352565b612220565b61220a848484600161210a565b80860482111561221c5761221c612352565b0290505b9392505050565b60008083128015600160ff1b85018412161561224557612245612352565b6001600160ff1b038401831381161561226057612260612352565b50500390565b60008282101561227857612278612352565b500390565b600063ffffffff8381169083168181101561229a5761229a612352565b039392505050565b600063ffffffff8216806122b8576122b8612352565b6000190192915050565b60006000198214156122d6576122d6612352565b5060010190565b600063ffffffff808316818114156122f7576122f7612352565b6001019392505050565b60008261231057612310612368565b500690565b600063ffffffff8084168061232c5761232c612368565b92169190910692915050565b6000600160ff1b82141561234e5761234e612352565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220a6ddaa682016d1a7998b672f38d1c42782a2598472c90da0b5524d3ce0923a1164736f6c63430008000033";

export class ERC20PrivacyPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _verifier2: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _maximumDepositAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20PrivacyPool> {
    return super.deploy(
      _verifier2,
      _levels,
      _hasher,
      _token,
      _maximumDepositAmount,
      overrides || {}
    ) as Promise<ERC20PrivacyPool>;
  }
  getDeployTransaction(
    _verifier2: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _maximumDepositAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier2,
      _levels,
      _hasher,
      _token,
      _maximumDepositAmount,
      overrides || {}
    );
  }
  attach(address: string): ERC20PrivacyPool {
    return super.attach(address) as ERC20PrivacyPool;
  }
  connect(signer: Signer): ERC20PrivacyPool__factory {
    return super.connect(signer) as ERC20PrivacyPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PrivacyPoolInterface {
    return new utils.Interface(_abi) as ERC20PrivacyPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20PrivacyPool {
    return new Contract(address, _abi, signerOrProvider) as ERC20PrivacyPool;
  }
}
