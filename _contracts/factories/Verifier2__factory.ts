/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Verifier2, Verifier2Interface } from "../Verifier2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256[7]",
        name: "input",
        type: "uint256[7]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d79806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063598da1d114610030575b600080fd5b610103600480360361010081101561004757600080fd5b81019060208101813564010000000081111561006257600080fd5b82018360208201111561007457600080fd5b8035906020019184600183028401116401000000008311171561009657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160e081810190925293969594818101949350915060079083908390808284376000920191909152509194506101179350505050565b604080519115158252519081900360200190f35b6000808380602001905161010081101561013057600080fd5b50905060005b60088160ff1610156101bb577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47828260ff166008811061017257fe5b6020020151106101b35760405162461bcd60e51b8152600401808060200182810382526022815260200180610d226022913960400191505060405180910390fd5b600101610136565b5060006040518060400160405280836000600881106101d657fe5b60200201518152602001836001600881106101ed57fe5b602002015190526040805160808101825284820151918101918252919250600091908190606082018660036020020151815250815260200160405180604001604052808660046008811061023d57fe5b602002015181526020018660056008811061025457fe5b6020020151905290526040805180820190915290915060009080856006602002015181526020018560076008811061028857fe5b602002015190529050600061029b610398565b60808101515190915060005b6007811015610362577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018982600781106102dd57fe5b60200201511061031e5760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfd6025913960400191505060405180910390fd5b610358826103538560800151846001016008811061033857fe5b60200201518c856007811061034957fe5b60200201516108ba565b610951565b91506001016102a7565b5061038b61036f866109ef565b8584600001518560200151858760400151898960600151610a96565b9998505050505050505050565b6103a0610c0c565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835180820185527f261c8e0ba52e8ed8bf1bcd6ee964d384525cce2703f7108918f229ce1228085a8186019081527f2a1c22d81ba7e446dba5b4a24c8ce1742c3639041ce7b1af8bfbb44e61f5e45b828501528152845180860186527f151adbff934031f8c8790761781ccf7e0555d4b2a43eabeb52cbfd91b63e90f281527f054a3722905440b3657e582005bcfeb541933cb97ec8069cef3e131153120e49818601528185015282860152835180850185527f0bb51c9c4bb32eff72b8467c660a90836e1f8545df59f7c334bc79b98c22ce4881527f25169f45b0a67ff08c9c58f61a679a34317136515f54f4467d06fae6a32ad87a81850152818601805191909152845180860186527f2722aa1e2957329c697bf01e9b0ccf335a7bd6546892a5fdc849d5f4a125f84381527f24dd8332f999b142083389ff0c12ddb599b62f2ddd9b059a7743d59735b43b87818601528151850152845180860186527f2216a205ef524a09322af79f5924f80b4f52436a2a9f3ddbbaa422361543518781527f169440c14a64d4fbe659cbb5d89a3af48c8406c1785bcbf21a28b54e06538d52818601528151860152845180860186527f1af93b0cf1f3dc577ba69b96dc4436f7bc7069ff0a04427f8cff320b1781e2b581527f1a56a01aeb94d91305587f555027db53ec7b60960e848349d0e9882d75fd8b4581860152815190930192909252835180850185527f20985391b787bd5d283349551847c552e5e0ab989096e684d6192c18087eac9581527f2fa0067ff2d37b0b35b2dab970756d98123fe58f8c2556a5cf81b1f8db83aaab81850152825190910152825180840184527f04920cad99a1b2acd7ee0fb666b649d04d683721c2cf7e7a9ae74f54543fdc1581527f1beb6f9b4886ea6ba7cc3ca05cc56e61f17246b98e9f476e7db300a36978388c81840152815160a00152825180840184527f105fc39890b8a870587907f43b32602914529a060e971ab30d3c76196805353581527f1aa1edfdfefa3e351e5c4c5b49b0cee29553c00925c481d57571224ae2d1b2ad81840152815160c0015282518084019093527f0f2f0f1712fd764ecb8e0c2e5a274c8c918e8ddf0af7cd9679f437dc38c532e683527f27b57e2d0806655fc9a5f38d1d61ccd5bdcaa28798301a9ff0354528f813bbb4918301919091525160e0015290565b6108c2610c58565b60408051606080820183528551825260208087015190830152918101849052906000908360808460076107d05a03fa90508080156108ff57610901565bfe5b5080610949576040805162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b604482015290519081900360640190fd5b505092915050565b610959610c58565b6000604051806080016040528085600001518152602001856020015181526020018460000151815260200184602001518152509050600060608360c08460066107d05a03fa90508080156108ff575080610949576040805162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b604482015290519081900360640190fd5b6109f7610c58565b8151158015610a0857506020820151155b15610a2757506040805180820190915260008082526020820152610a91565b6040518060400160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47846020015181610a6957fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703905290505b919050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e0820152600090610b95610c72565b60006020826103008560086107d05a03fa90508080156108ff575080610bfa576040805162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b604482015290519081900360640190fd5b505115159a9950505050505050505050565b6040518060a00160405280610c1f610c58565b8152602001610c2c610c90565b8152602001610c39610c90565b8152602001610c46610c90565b8152602001610c53610cb0565b905290565b604051806040016040528060008152602001600081525090565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280610ca3610cde565b8152602001610c53610cde565b6040518061010001604052806008905b610cc8610c58565b815260200190600190039081610cc05790505090565b6040518060400160405280600290602082028036833750919291505056fe76657269666965722d696e7075742d6774652d736e61726b2d7363616c61722d6669656c6476657269666965722d70726f6f662d656c656d656e742d6774652d7072696d652d71a2646970667358221220cace689b62039c78345eeee6ddaf34a8cda7f5dd76b2117fcde3b25a6809307f64736f6c63430007060033";

export class Verifier2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Verifier2> {
    return super.deploy(overrides || {}) as Promise<Verifier2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Verifier2 {
    return super.attach(address) as Verifier2;
  }
  connect(signer: Signer): Verifier2__factory {
    return super.connect(signer) as Verifier2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Verifier2Interface {
    return new utils.Interface(_abi) as Verifier2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier2 {
    return new Contract(address, _abi, signerOrProvider) as Verifier2;
  }
}
